# Github workflow to perform the following tasks for a chosen version of the jitbit application
# - If the docker image does not exist in the Cloud Platform ECR repo
#     - Query ECR for versions

#   - Build docker file for Jitbit version
#     - Pass version into docker file
#     - Depends on access to bucket and contents of files
#   - Tag
#   - Push to ECR
#     - Using version number
# - Deploy helm chart to Cloud Platform namespace
#     - Use version number as app version or pass in app version to deploy
name: cloud-platform-sandbox-build-deploy
on:
  workflow_dispatch:
    inputs:
      jitbitversion:
        description: 'Jitbit version, e.g. 10.8'
        required: true
        default: "10.8"
        type: string
  push:
    paths:
      - 'helm/**'
      - 'kubernetes/**'
      - '.github/workflows/cloud-platform-sandbox-build-deploy.yml'

env:
  IMAGE_REPOSITORY_NAME: hmpps-migration/hmpps-community-rehabilitation-ancilliary-jitbit-dev-ecr
  JITBIT_VERSION: "10.8"

jobs:
  build_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # v1.7.0
        with:
          aws-access-key-id: ${{ secrets.CP_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CP_ECR_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: List image versions
        id: list-image-versions
        run: |
            imageExist=true
            aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin ${{ secrets.CP_AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com
            imageDigest=$(aws ecr list-images --repository-name $IMAGE_REPOSITORY_NAME | jq -r '.imageIds[] | select(.imageTag=="${{ env.JITBIT_VERSION }}") | .imageDigest')
            if [[ -z "$imageDigest" ]]; then 
              imageExist=false
            fi
            echo "Image digest: $imageDigest"
            echo "imageExist=$imageExist" >> $GITHUB_OUTPUT

      - name: Build docker file
        if: steps.list-image-versions.outputs.imageExist=='false'
        run: |
            echo "Digest passed in: ${{ steps.list-image-versions.outputs.imageExist }}"

      - name: Checkout Jitbit app repo
        uses: actions/checkout@v3

      # - name: Bump version and push tag
      #   id: BumpVersionAndPushTag
      #   uses: anothrNick/github-tag-action@1.61.0 # Don't use @master unless you're happy to test the latest version
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     WITH_V: false
      #     DEFAULT_BUMP: minor # Making this default visible
      #     INITIAL_VERSION: 0.0.0 # Making this default visible
      #     TAG_CONTEXT: repo # Making this default visible
      #     PRERELEASE: true
      #     PRERELEASE_SUFFIX: ${{ github.ref_name }} # Branch name
      #     DRY_RUN: ${{ github.ref != 'refs/heads/main' }} # Tag repo on main, not otherwise. Note we can still use the proposed dry-run tag to tag ECR images

      # - name: Pull down S3 app files
      #   run: aws s3 cp s3://${{ secrets.AMI_BUCKET_NAME }}/delius-jitbit/app docker/app  --recursive

      # - name: Docker build
      #   run: docker build --no-cache -t ${{ secrets.CORE_SHARED_SERVICES_ACCOUNT }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/delius-jitbit-ecr-repo:$(echo ${{ steps.BumpVersionAndPushTag.outputs.new_tag }} | sed 's/[^a-zA-Z0-9.]/-/g') ./docker

      # - name: Docker login
      #   if: contains(github.event.head_commit.message, 'ecr_push') || github.ref == 'refs/heads/main'
      #   run: aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.CORE_SHARED_SERVICES_ACCOUNT }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # - name: Docker push
      #   if: contains(github.event.head_commit.message, 'ecr_push') || github.ref == 'refs/heads/main'
      #   run: docker push ${{ secrets.CORE_SHARED_SERVICES_ACCOUNT }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/delius-jitbit-ecr-repo:$(echo ${{ steps.BumpVersionAndPushTag.outputs.new_tag }} | sed 's/[^a-zA-Z0-9.]/-/g')

