name: "Jitbit: Blue-Green Deployment"
on:
  workflow_dispatch:
    inputs:
        environment:
            required: true
            type: choice
            options:
              - "development"
              - "test"
              - "preproduction"
              - "production"
        image_tag:
            required: false
            type: string
            default: "latest"
  workflow_call:

jobs:
  create-container:
    name: Create ECS in delius-jitbit ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    environment: delius-jitbit-${{ github.event.inputs.environment }}
    permissions:
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/modernisation-platform-oidc-cicd"
          role-session-name: "hmpps-delius-operational-automation-${{ github.run_number }}"
          aws-region: "eu-west-2"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "${{ inputs.terraform_version }}"
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: terraform
        run: |
          terraform --version
          echo "terraform init -backend-config=environments/${{ inputs.environment }}/backend.hcl"
          terraform init -backend-config=environments/${{ inputs.environment }}/backend.hcl

      - name: Terraform Plan
        id: plan
        working-directory: terraform
        run: |
          set -o pipefail
          exitcode=0
          tfargs="-detailed-exitcode"
          echo "terraform plan -var-file=environments/${{ inputs.environment }}/terraform.tfvars -var="image_tag=${{ inputs.image_tag }}" $tfargs | tee tfplan.txt || exitcode=$?"
          terraform plan -var-file=environments/${{ inputs.environment }}/terraform.tfvars -var="image_tag=${{ inputs.image_tag }}" $tfargs | tee tfplan.txt || exitcode=$?
          echo "exitcode=${exitcode}"  # 0=clean plan, 1=error, 2=stuff in plan
          echo "exitcode=${exitcode}" >> $GITHUB_OUTPUT
          (( exitcode == 1 )) && exit 1 || exit 0
      

      
  manual-testing: #Â jitbit team checks their upgrade work at this point
    name: Wait for manual testing from jitbit team
    runs-on: ubuntu-latest
    environment: delius-jitbit-${{ github.event.inputs.environment }}
    permissions:
      id-token: write
  
  health-check: # automated check
    name: Wait for manual testing from jitbit team
      runs-on: ubuntu-latest
      environment: delius-jitbit-${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    environment: delius-jitbit-${{ github.event.inputs.environment }}
    permissions:
      id-token: write

  switch-traffic:

  terminate-old: # optional step to terminate old container

  rollback: # optional step to switch traffic back


